{"ast":null,"code":"var _jsxFileName = \"/home/habibur/React/my-app/src/Components/EventHandler.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EventHandler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      children: [this.state.isToggleOn ? 'ON' : 'OFF', /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EventHandler;","map":{"version":3,"sources":["/home/habibur/React/my-app/src/Components/EventHandler.js"],"names":["React","EventHandler","Component","constructor","props","state","isToggleOn","handleClick","bind","setState","render","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA0C;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,UAAU,EAAC;AADJ,KAAX;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,GAAE;AACT,SAAKE,QAAL,CAAcJ,KAAK,KAAG;AAClBC,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AADD,KAAH,CAAnB;AAGH;;AAEDI,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAQ,MAAA,OAAO,EAAE,KAAKH,WAAtB;AAAA,iBACK,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADpC,eAEI;AAAA,kBAAIF,KAAK,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAzBqC;;AA6B1C,eAAeV,YAAf","sourcesContent":["import React from 'react';\n\nclass EventHandler extends React.Component{\n   \n    constructor(props){\n        super(props);\n        this.state={\n            isToggleOn:true\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.setState(state=>({\n            isToggleOn: !state.isToggleOn\n        }));\n    }\n\n    render(){\n\n        return(\n            <button onClick={this.handleClick}>\n                {this.state.isToggleOn ? 'ON' : 'OFF'}\n                <p>{props.name}</p>\n            </button>\n\n        );\n    }\n    \n}\n\nexport default EventHandler"]},"metadata":{},"sourceType":"module"}